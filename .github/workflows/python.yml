name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]

env:
  # GCP Parameters
  GKE_LOCATION: ${{ secrets.GKE_LOCATION }}
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_REPOSITORY: ${{ secrets.GKE_REPOSITORY }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}

  # Aplication Parameters
  APP: simple-app
  NAMESPACE: simple

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

#    # login to GCP
#    - uses: google-github-actions/setup-gcloud@v0.2.0
#      with:
#        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
#        project_id: ${{ env.GKE_PROJECT }}
#
#    # gcloud configure docker
#    - name: Configure Docker
#      run: gcloud auth configure-docker --quiet
#
#    # build image
#    - name: Build Docker image
#      run: docker build --tag "gcr.io/${{ env.GKE_PROJECT_ID }}/${{ env.GKE_REPOSITORY }}/${{ env.APP }}:$GITHUB_SHA" .
#
#    # push image to registry
#    - name: Push Docker image
#      run: docker push "gcr.io/${{ env.GKE_PROJECT_ID }}/${{ env.GKE_REPOSITORY }}/${{ env.APP }}:$GITHUB_SHA"
#
#    - id: 'auth'
#      uses: 'google-github-actions/auth@v0'
#      with:
#        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#
#    - id: 'get-credentials'
#      uses: 'google-github-actions/get-gke-credentials@v0'
#      with:
#        cluster_name: ${{ env.GKE_CLUSTER }}
#        location: ${{ env.GKE_LOCATION }}

    # replace variables in k8s deployment 
    - name: Replace Environment Variables
      uses: danielr1996/envsubst-action@1.1.0
      env:
        APP_NAME: ${{ env.APP }}
        IMAGE_NAME: "gcr.io/${{ env.GKE_PROJECT_ID }}/${{ env.GKE_REPOSITORY }}/${{ env.APP }}:${{ github.sha }}"
        NAMESPACE_NAME: ${{ env.NAMESPACE }}
      with:
        input: "${{ github.workspace }}/.github/manifests/deployment.yaml"
        output: deploy.yaml

    - name: commands
      run: |-
        ls -la .
        cat deploy.yaml

#    # deploy the Docker image to the GKE cluster
#    - name: Deploy
#      run: |-
#        kubectl apply -f deploy.yaml
#        kubectl get pods -n default

